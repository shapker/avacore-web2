class AvacoreDashboard {
    constructor() {
        this.data = null;
        console.log("üîÑ AvacoreDashboard –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
        this.loadDataFromUrl();
    }

    loadDataFromUrl() {
        const urlParams = new URLSearchParams(window.location.search);
        const compressedData = urlParams.get('data');
        
        console.log("üîç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã URL:", window.location.search);
        console.log("üì¶ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", compressedData ? `–î–ª–∏–Ω–∞: ${compressedData.length}` : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
        
        if (!compressedData) {
            this.showError('–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ URL. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–ø–∞–Ω–µ–ª—å —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /web');
            return;
        }
        
        try {
            console.log("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–∫–æ–º–ø—Ä–µ—Å—Å–∏—é –¥–∞–Ω–Ω—ã—Ö...");
            this.data = this.decompressData(compressedData);
            
            if (!this.data) {
                throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –¥–µ–∫–æ–º–ø—Ä–µ—Å—Å–∏–∏');
            }
            
            console.log("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:", this.data);
            this.hideLoading();
            this.showMainContent();
            this.showSection('stats');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
            this.showError(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: ${error.message}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–ø–∞–Ω–µ–ª—å —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /web`);
        }
    }

    decompressData(compressedStr) {
        try {
            console.log("üîß –î–µ–∫–æ–º–ø—Ä–µ—Å—Å–∏—è –¥–∞–Ω–Ω—ã—Ö...");
            
            // –î–µ–∫–æ–¥–∏—Ä—É–µ–º base64
            const binaryString = atob(compressedStr);
            console.log("üìê –î–≤–æ–∏—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞:", binaryString.length, "—Å–∏–º–≤–æ–ª–æ–≤");
            
            const bytes = new Uint8Array(binaryString.length);
            for (let i = 0; i < binaryString.length; i++) {
                bytes[i] = binaryString.charCodeAt(i);
            }
            
            // –î–µ–∫–æ–º–ø—Ä–µ—Å—Å–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º pako
            console.log("üéØ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å–ø–∞–∫–æ–≤–∫—É...");
            const decompressed = pako.inflate(bytes, { to: 'string' });
            console.log("üìÑ –†–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", decompressed.length, "—Å–∏–º–≤–æ–ª–æ–≤");
            
            const result = JSON.parse(decompressed);
            console.log("‚úÖ JSON —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω");
            return result;
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –¥–µ–∫–æ–º–ø—Ä–µ—Å—Å–∏–∏:', error);
            
            // –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ - –≤–æ–∑–º–æ–∂–Ω–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–∂–∞—Ç—ã
            try {
                console.log("üîÑ –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π JSON parse...");
                return JSON.parse(compressedStr);
            } catch (e) {
                console.error('‚ùå –ò –ø—Ä—è–º–æ–π JSON —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', e);
                throw new Error(`–î–µ–∫–æ–º–ø—Ä–µ—Å—Å–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: ${error.message}`);
            }
        }
    }

    hideLoading() {
        document.getElementById('loadingSection').style.display = 'none';
        console.log("üëã –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä—ã—Ç–∞");
    }

    showMainContent() {
        document.getElementById('mainContent').style.display = 'block';
        console.log("üì± –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–∫–∞–∑–∞–Ω");
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        if (this.data.timestamp) {
            const date = new Date(this.data.timestamp);
            document.getElementById('lastUpdate').textContent = 
                `–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${date.toLocaleString('ru-RU')}`;
        }
    }

    showError(message) {
        document.getElementById('loadingSection').style.display = 'none';
        document.getElementById('errorSection').style.display = 'block';
        document.getElementById('errorMessage').textContent = message;
        console.error("üö® –û—à–∏–±–∫–∞:", message);
    }

    // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ...
    showSection(sectionName) {
        document.querySelectorAll('.content-section').forEach(section => {
            section.style.display = 'none';
        });
        
        document.getElementById(sectionName + 'Section').style.display = 'block';
        
        document.querySelectorAll('.navbar-nav .nav-link').forEach(link => {
            link.classList.remove('active');
        });
        event.target.classList.add('active');
        
        if (sectionName === 'stats' && this.data) {
            this.displayStats();
        } else if (sectionName === 'messages' && this.data) {
            this.displayMessages();
        } else if (sectionName === 'media' && this.data) {
            this.displayMediaStats();
        }
    }

    displayStats() {
        if (!this.data) return;
        this.displayStatsCards();
        this.displayCharts();
    }

    displayStatsCards() {
        const data = this.data;
        const statsCards = document.getElementById('statsCards');
        
        statsCards.innerHTML = `
            <div class="col-md-3 mb-4">
                <div class="card stat-card bg-primary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h3>${data.total_messages}</h3>
                                <p>–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π</p>
                            </div>
                            <div class="icon">
                                <i class="fas fa-comments fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-3 mb-4">
                <div class="card stat-card bg-success text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h3>${data.text_messages}</h3>
                                <p>–¢–µ–∫—Å—Ç–æ–≤—ã—Ö</p>
                            </div>
                            <div class="icon">
                                <i class="fas fa-file-text fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-3 mb-4">
                <div class="card stat-card bg-warning text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h3>${data.media_messages}</h3>
                                <p>–ú–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤</p>
                            </div>
                            <div class="icon">
                                <i class="fas fa-photo-video fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-3 mb-4">
                <div class="card stat-card bg-info text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h3>${data.unique_senders}</h3>
                                <p>–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π</p>
                            </div>
                            <div class="icon">
                                <i class="fas fa-users fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }

    displayCharts() {
        this.displayActivityChart();
        this.displayMediaChart();
    }

    displayActivityChart() {
        const dailyStats = this.data.daily_stats;
        const ctx = document.getElementById('activityChart').getContext('2d');
        
        if (window.activityChart) {
            window.activityChart.destroy();
        }

        window.activityChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: dailyStats.map(day => {
                    const date = new Date(day.date);
                    return date.toLocaleDateString('ru-RU');
                }),
                datasets: [{
                    label: '–°–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å',
                    data: dailyStats.map(day => day.count),
                    borderColor: 'rgb(75, 192, 192)',
                    backgroundColor: 'rgba(75, 192, 192, 0.1)',
                    tension: 0.1,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    }
                }
            }
        });
    }

    displayMediaChart() {
        const mediaStats = this.data.media_stats;
        const ctx = document.getElementById('mediaChart').getContext('2d');
        
        if (window.mediaChart) {
            window.mediaChart.destroy();
        }

        const mediaTypes = {
            '–§–æ—Ç–æ': mediaStats.photo || 0,
            '–í–∏–¥–µ–æ': mediaStats.video || 0,
            '–ê—É–¥–∏–æ': mediaStats.audio || 0,
            '–°—Ç–∏–∫–µ—Ä—ã': mediaStats.sticker || 0,
            '–î–æ–∫—É–º–µ–Ω—Ç—ã': mediaStats.document || 0
        };

        window.mediaChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: Object.keys(mediaTypes),
                datasets: [{
                    data: Object.values(mediaTypes),
                    backgroundColor: [
                        '#FF6384',
                        '#36A2EB',
                        '#FFCE56',
                        '#4BC0C0',
                        '#9966FF'
                    ]
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom',
                    }
                }
            }
        });
    }

    displayMessages() {
        const messages = this.data.recent_messages;
        const table = document.getElementById('messagesTable');
        
        if (!messages || messages.length === 0) {
            table.innerHTML = `
                <tr>
                    <td colspan="4" class="text-center py-4">
                        <i class="fas fa-inbox fa-2x text-muted mb-3"></i>
                        <p>–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π</p>
                    </td>
                </tr>
            `;
            return;
        }
        
        table.innerHTML = messages.map(msg => `
            <tr>
                <td>
                    ${msg.is_media ? 
                        '<span class="badge bg-success">–ú–µ–¥–∏–∞</span>' : 
                        '<span class="badge bg-primary">–¢–µ–∫—Å—Ç</span>'
                    }
                </td>
                <td>@${msg.user_login || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</td>
                <td>
                    ${msg.is_media ? 
                        `<i class="fas fa-file"></i> ${msg.path || '–§–∞–π–ª'}` : 
                        (msg.text || '–°–æ–æ–±—â–µ–Ω–∏–µ')
                    }
                </td>
                <td>${new Date(msg.date).toLocaleString('ru-RU')}</td>
            </tr>
        `).join('');
    }

    displayMediaStats() {
        const mediaStats = this.data.media_stats;
        const container = document.getElementById('mediaStatsCards');
        
        const stats = {
            '–§–æ—Ç–æ': mediaStats.photo || 0,
            '–í–∏–¥–µ–æ': mediaStats.video || 0,
            '–ê—É–¥–∏–æ': mediaStats.audio || 0,
            '–°—Ç–∏–∫–µ—Ä—ã': mediaStats.sticker || 0,
            '–î–æ–∫—É–º–µ–Ω—Ç—ã': mediaStats.document || 0
        };

        container.innerHTML = Object.entries(stats).map(([type, count]) => `
            <div class="col-md-4 mb-3">
                <div class="card">
                    <div class="card-body text-center">
                        <div class="media-icon mb-2">
                            ${this.getMediaIcon(type)}
                        </div>
                        <h4>${count}</h4>
                        <p class="text-muted">${type}</p>
                    </div>
                </div>
            </div>
        `).join('');
    }

    getMediaIcon(type) {
        const icons = {
            '–§–æ—Ç–æ': 'fas fa-image text-primary',
            '–í–∏–¥–µ–æ': 'fas fa-video text-danger',
            '–ê—É–¥–∏–æ': 'fas fa-music text-success',
            '–°—Ç–∏–∫–µ—Ä—ã': 'fas fa-sticky-note text-warning',
            '–î–æ–∫—É–º–µ–Ω—Ç—ã': 'fas fa-file text-secondary'
        };
        return `<i class="${icons[type] || 'fas fa-file'} fa-2x"></i>`;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', () => {
    console.log("üöÄ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AvacoreDashboard...");
    window.avacoreDashboard = new AvacoreDashboard();
});

function showSection(sectionName) {
    if (window.avacoreDashboard) {
        window.avacoreDashboard.showSection(sectionName);
    }
}
