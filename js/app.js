// js/app.js - –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let activityChart = null;
let mediaChart = null;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ URL
function decodeDataFromURL() {
    try {
        const urlParams = new URLSearchParams(window.location.search);
        const encodedData = urlParams.get('data');
        
        if (!encodedData) {
            throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ URL');
        }

        // –ü—ã—Ç–∞–µ–º—Å—è —Å–Ω–∞—á–∞–ª–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ —Å–∂–∞—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ
        try {
            // –î–µ–∫–æ–¥–∏—Ä—É–µ–º –∏–∑ base64
            const compressedData = Uint8Array.from(atob(encodedData), c => c.charCodeAt(0));
            
            // –î–µ–∫–æ–º–ø—Ä–µ—Å—Å–∏—è —Å –ø–æ–º–æ—â—å—é pako (zlib)
            const jsonStr = pako.inflate(compressedData, { to: 'string' });
            const userData = JSON.parse(jsonStr);
            
            console.log('üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã (—Å–∂–∞—Ç—ã–π —Ñ–æ—Ä–º–∞—Ç):', userData);
            return userData;
        } catch (compressionError) {
            console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–µ–∫–æ–º–ø—Ä–µ—Å—Å–∏—Ä–æ–≤–∞—Ç—å, –ø—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç–æ–π base64...');
            
            // –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç - –ø—Ä–æ—Å—Ç–æ–π base64
            const jsonStr = atob(encodedData);
            const userData = JSON.parse(jsonStr);
            
            console.log('üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã (–ø—Ä–æ—Å—Ç–æ–π —Ñ–æ—Ä–º–∞—Ç):', userData);
            return userData;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error);
        throw error;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–µ–∫—Ü–∏–∏
function showSection(sectionName) {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏
    document.querySelectorAll('.content-section').forEach(section => {
        section.style.display = 'none';
    });
    
    // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    document.querySelectorAll('.nav-link').forEach(link => {
        link.classList.remove('active');
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å–µ–∫—Ü–∏—é –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É
    document.getElementById(sectionName + 'Section').style.display = 'block';
    event.target.classList.add('active');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–µ–∫—Ü–∏–∏
    if (sectionName === 'stats') {
        loadStatsSection();
    } else if (sectionName === 'messages') {
        loadMessagesSection();
    } else if (sectionName === 'media') {
        loadMediaSection();
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ–∫—Ü–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function loadStatsSection() {
    const userData = window.userData;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const updateTime = userData.ts ? new Date(userData.ts).toLocaleString() : new Date().toLocaleString();
    document.getElementById('lastUpdate').textContent = `–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${updateTime}`;
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const statsCards = document.getElementById('statsCards');
    statsCards.innerHTML = `
        <div class="col-md-3 col-6 mb-4">
            <div class="card stats-card h-100">
                <div class="card-body text-center">
                    <i class="fas fa-comments fa-2x text-primary mb-2"></i>
                    <h3>${userData.total || 0}</h3>
                    <p class="text-muted mb-0">–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6 mb-4">
            <div class="card stats-card h-100">
                <div class="card-body text-center">
                    <i class="fas fa-font fa-2x text-success mb-2"></i>
                    <h3>${userData.text || 0}</h3>
                    <p class="text-muted mb-0">–¢–µ–∫—Å—Ç–æ–≤—ã—Ö</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6 mb-4">
            <div class="card stats-card h-100">
                <div class="card-body text-center">
                    <i class="fas fa-photo-video fa-2x text-warning mb-2"></i>
                    <h3>${userData.media || 0}</h3>
                    <p class="text-muted mb-0">–ú–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6 mb-4">
            <div class="card stats-card h-100">
                <div class="card-body text-center">
                    <i class="fas fa-users fa-2x text-info mb-2"></i>
                    <h3>${userData.senders || 0}</h3>
                    <p class="text-muted mb-0">–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π</p>
                </div>
            </div>
        </div>
    `;
    
    // –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫–∏
    createCharts(userData);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤
function createCharts(userData) {
    const mStats = userData.m_stats || {};
    
    // –ì—Ä–∞—Ñ–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π)
    const activityCtx = document.getElementById('activityChart').getContext('2d');
    if (activityChart) {
        activityChart.destroy();
    }
    
    activityChart = new Chart(activityCtx, {
        type: 'line',
        data: {
            labels: ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'],
            datasets: [{
                label: '–°–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å',
                data: [12, 19, 8, 15, 12, 16, 11],
                borderColor: '#007bff',
                backgroundColor: 'rgba(0, 123, 255, 0.1)',
                tension: 0.4,
                fill: true
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    display: false
                }
            }
        }
    });
    
    // –ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –º–µ–¥–∏–∞
    const mediaCtx = document.getElementById('mediaChart').getContext('2d');
    if (mediaChart) {
        mediaChart.destroy();
    }
    
    mediaChart = new Chart(mediaCtx, {
        type: 'doughnut',
        data: {
            labels: ['–§–æ—Ç–æ', '–í–∏–¥–µ–æ', '–ì–æ–ª–æ—Å–æ–≤—ã–µ', '–ê—É–¥–∏–æ', '–°—Ç–∏–∫–µ—Ä—ã', '–î–æ–∫—É–º–µ–Ω—Ç—ã'],
            datasets: [{
                data: [
                    mStats.p || 0,  // photo
                    mStats.v || 0,  // video
                    mStats.vo || 0, // voice
                    mStats.a || 0,  // audio
                    mStats.s || 0,  // sticker
                    mStats.d || 0   // document
                ],
                backgroundColor: [
                    '#ff6b6b', '#4834d4', '#00d2d3', '#00b894', '#fdcb6e', '#a29bfe'
                ]
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'bottom'
                }
            }
        }
    });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ–∫—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
function loadMessagesSection() {
    const userData = window.userData;
    const messagesTable = document.getElementById('messagesTable');
    
    const messages = userData.messages || [];
    
    if (messages.length === 0) {
        messagesTable.innerHTML = `
            <tr>
                <td colspan="4" class="text-center text-muted py-4">
                    <i class="fas fa-inbox fa-3x mb-3"></i>
                    <p>–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π</p>
                </td>
            </tr>
        `;
        return;
    }
    
    messagesTable.innerHTML = messages.map(message => {
        const icon = message.m ? 
            getMediaIcon(message.ty) : 
            '<i class="fas fa-text-width text-primary"></i>';
        
        const content = message.m ? 
            `<span class="badge bg-secondary">${getMediaTypeText(message.ty)}</span>` :
            (message.t || '') + (message.t && message.t.length >= 50 ? '...' : '');
        
        return `
            <tr>
                <td>${icon}</td>
                <td>${message.u || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</td>
                <td>${content}</td>
                <td>${message.d || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</td>
            </tr>
        `;
    }).join('');
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ–∫—Ü–∏–∏ –º–µ–¥–∏–∞
function loadMediaSection() {
    const userData = window.userData;
    const mediaStatsCards = document.getElementById('mediaStatsCards');
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –º–µ–¥–∏–∞
    const mStats = userData.m_stats || {};
    mediaStatsCards.innerHTML = `
        <div class="col-md-2 col-6 mb-3">
            <div class="card text-center stats-card">
                <div class="card-body">
                    <i class="fas fa-image fa-2x text-primary"></i>
                    <h5 class="mt-2">${mStats.p || 0}</h5>
                    <p class="text-muted mb-0">–§–æ—Ç–æ</p>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-6 mb-3">
            <div class="card text-center stats-card">
                <div class="card-body">
                    <i class="fas fa-video fa-2x text-success"></i>
                    <h5 class="mt-2">${mStats.v || 0}</h5>
                    <p class="text-muted mb-0">–í–∏–¥–µ–æ</p>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-6 mb-3">
            <div class="card text-center stats-card">
                <div class="card-body">
                    <i class="fas fa-microphone fa-2x text-info"></i>
                    <h5 class="mt-2">${mStats.vo || 0}</h5>
                    <p class="text-muted mb-0">–ì–æ–ª–æ—Å–æ–≤—ã–µ</p>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-6 mb-3">
            <div class="card text-center stats-card">
                <div class="card-body">
                    <i class="fas fa-music fa-2x text-warning"></i>
                    <h5 class="mt-2">${mStats.a || 0}</h5>
                    <p class="text-muted mb-0">–ê—É–¥–∏–æ</p>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-6 mb-3">
            <div class="card text-center stats-card">
                <div class="card-body">
                    <i class="fas fa-sticky-note fa-2x text-danger"></i>
                    <h5 class="mt-2">${mStats.s || 0}</h5>
                    <p class="text-muted mb-0">–°—Ç–∏–∫–µ—Ä—ã</p>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-6 mb-3">
            <div class="card text-center stats-card">
                <div class="card-body">
                    <i class="fas fa-file fa-2x text-secondary"></i>
                    <h5 class="mt-2">${mStats.d || 0}</h5>
                    <p class="text-muted mb-0">–î–æ–∫—É–º–µ–Ω—Ç—ã</p>
                </div>
            </div>
        </div>
    `;
    
    // –°–æ–∑–¥–∞–µ–º –≥–∞–ª–µ—Ä–µ—é –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
    createMediaGallery(userData.files || []);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
function createMediaGallery(mediaFiles) {
    const mediaContainer = document.querySelector('#mediaSection .card-body .row');
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≥–∞–ª–µ—Ä–µ—é –µ—Å–ª–∏ –µ—Å—Ç—å
    const oldGallery = document.getElementById('mediaGallery');
    if (oldGallery) {
        oldGallery.remove();
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏
    const galleryRow = document.createElement('div');
    galleryRow.className = 'row mt-4';
    galleryRow.id = 'mediaGallery';
    
    if (mediaFiles.length === 0) {
        galleryRow.innerHTML = `
            <div class="col-12">
                <div class="text-center text-muted py-5">
                    <i class="fas fa-photo-video fa-3x mb-3"></i>
                    <p>–ù–µ—Ç –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤</p>
                </div>
            </div>
        `;
    } else {
        galleryRow.innerHTML = `
            <div class="col-12">
                <h5><i class="fas fa-images"></i> –ì–∞–ª–µ—Ä–µ—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤</h5>
                <p class="text-muted">–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</p>
                <div class="media-grid" id="mediaGrid"></div>
            </div>
        `;
        
        const mediaGrid = document.getElementById('mediaGrid');
        mediaGrid.innerHTML = mediaFiles.map(media => {
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
            const fullPath = `media/user_${window.userData.uid}/${media.p}`;
            
            return `
                <div class="media-item" onclick="openMediaModal('${fullPath}', '${media.t}')">
                    <div class="media-preview media-${media.t}">
                        ${getMediaPreviewIcon(media.t)}
                    </div>
                    <div class="media-info">
                        <div class="media-type">${getMediaTypeText(media.t)}</div>
                        <div class="media-date">${media.d}</div>
                        <small class="text-muted">${media.u}</small>
                    </div>
                </div>
            `;
        }).join('');
    }
    
    mediaContainer.appendChild(galleryRow);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –º–µ–¥–∏–∞
function openMediaModal(filePath, mediaType) {
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    let modal = document.getElementById('mediaModal');
    if (!modal) {
        modal = document.createElement('div');
        modal.className = 'modal fade media-modal';
        modal.id = 'mediaModal';
        modal.innerHTML = `
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">–ü—Ä–æ—Å–º–æ—Ç—Ä –º–µ–¥–∏–∞</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div id="mediaContent"></div>
                        <p class="mt-3 text-muted">${filePath}</p>
                    </div>
                </div>
            </div>
        `;
        document.body.appendChild(modal);
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –º–µ–¥–∏–∞
    const mediaContent = document.getElementById('mediaContent');
    let contentHtml = '';
    
    switch (mediaType) {
        case 'photo':
            contentHtml = `<img src="${filePath}" class="media-content" alt="–§–æ—Ç–æ" onerror="this.style.display='none'; document.getElementById('fallbackContent').style.display='block';">`;
            break;
        case 'video':
            contentHtml = `<video controls class="media-content">
                <source src="${filePath}" type="video/mp4">
                –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ.
            </video>`;
            break;
        case 'voice':
        case 'audio':
            contentHtml = `<audio controls class="audio-player">
                <source src="${filePath}" type="audio/ogg">
                –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞—É–¥–∏–æ.
            </audio>`;
            break;
        default:
            contentHtml = `
                <div class="text-center py-4">
                    <i class="fas fa-file-download fa-3x text-primary mb-3"></i>
                    <p>–§–∞–π–ª: ${filePath.split('/').pop()}</p>
                    <a href="${filePath}" class="btn btn-primary" download>
                        <i class="fas fa-download"></i> –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª
                    </a>
                </div>
            `;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º fallback –∫–æ–Ω—Ç–µ–Ω—Ç
    contentHtml += `
        <div id="fallbackContent" style="display: none;" class="text-center py-4">
            <i class="fas fa-exclamation-triangle fa-3x text-warning mb-3"></i>
            <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–¥–∏–∞—Ñ–∞–π–ª</p>
            <a href="${filePath}" class="btn btn-outline-primary" download>
                <i class="fas fa-download"></i> –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª
            </a>
        </div>
    `;
    
    mediaContent.innerHTML = contentHtml;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const bootstrapModal = new bootstrap.Modal(modal);
    bootstrapModal.show();
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–µ–¥–∏–∞
function getMediaIcon(mediaType) {
    const icons = {
        'photo': 'fas fa-image text-success',
        'video': 'fas fa-video text-danger', 
        'voice': 'fas fa-microphone text-primary',
        'audio': 'fas fa-music text-warning',
        'sticker': 'fas fa-sticky-note text-info',
        'document': 'fas fa-file text-secondary',
        'text': 'fas fa-text-width text-primary'
    };
    return `<i class="${icons[mediaType] || 'fas fa-file'}"></i>`;
}

function getMediaPreviewIcon(mediaType) {
    const icons = {
        'photo': '<i class="fas fa-camera"></i>',
        'video': '<i class="fas fa-film"></i>',
        'voice': '<i class="fas fa-microphone"></i>',
        'audio': '<i class="fas fa-music"></i>',
        'sticker': '<i class="fas fa-sticky-note"></i>',
        'document': '<i class="fas fa-file"></i>'
    };
    return icons[mediaType] || '<i class="fas fa-file"></i>';
}

function getMediaTypeText(mediaType) {
    const types = {
        'photo': '–§–æ—Ç–æ',
        'video': '–í–∏–¥–µ–æ',
        'voice': '–ì–æ–ª–æ—Å–æ–≤–æ–µ',
        'audio': '–ê—É–¥–∏–æ',
        'sticker': '–°—Ç–∏–∫–µ—Ä',
        'document': '–î–æ–∫—É–º–µ–Ω—Ç',
        'text': '–¢–µ–∫—Å—Ç'
    };
    return types[mediaType] || '–§–∞–π–ª';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞
function handleMediaError(element) {
    element.style.display = 'none';
    const fallback = document.getElementById('fallbackContent');
    if (fallback) {
        fallback.style.display = 'block';
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    try {
        // –î–µ–∫–æ–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ URL
        window.userData = decodeDataFromURL();
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
        document.getElementById('loadingSection').style.display = 'none';
        document.getElementById('mainContent').style.display = 'block';
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Å–µ–∫—Ü–∏—é
        showSection('stats');
        
        console.log('‚úÖ –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ');
        
    } catch (error) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
        document.getElementById('loadingSection').style.display = 'none';
        document.getElementById('errorSection').style.display = 'block';
        document.getElementById('errorMessage').textContent = error.message;
        
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
function refreshData() {
    location.reload();
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–∏—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É event)
document.addEventListener('DOMContentLoaded', function() {
    // –í–µ—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏
    document.querySelectorAll('.nav-link').forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const sectionName = this.getAttribute('onclick').match(/showSection\('([^']+)'\)/)[1];
            
            // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏
            document.querySelectorAll('.content-section').forEach(section => {
                section.style.display = 'none';
            });
            
            // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            document.querySelectorAll('.nav-link').forEach(navLink => {
                navLink.classList.remove('active');
            });
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å–µ–∫—Ü–∏—é –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É
            document.getElementById(sectionName + 'Section').style.display = 'block';
            this.classList.add('active');
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–µ–∫—Ü–∏–∏
            if (sectionName === 'stats') {
                loadStatsSection();
            } else if (sectionName === 'messages') {
                loadMessagesSection();
            } else if (sectionName === 'media') {
                loadMediaSection();
            }
        });
    });
});
